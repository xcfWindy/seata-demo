<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>seata-demo</artifactId>
    <version>1.0.0</version>

    <packaging>pom</packaging>

    <modules>
        <module>order-service</module>
    </modules>
    <!-- 属性配置 -->
    <properties>
        <!-- 编译时的编码 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <spring-boot.version>3.0.2</spring-boot.version>
        <hutool.version>5.8.11</hutool.version>
        <java.version>17</java.version>
        <lombok.version>1.18.30</lombok.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <spring-cloud-alibaba.version>2022.0.0.0</spring-cloud-alibaba.version>
        <spring-cloud.version>2022.0.0.0</spring-cloud.version>
    </properties>

    <!-- 依赖配置 -->
    <dependencies>

    </dependencies>

    <!-- 依赖声明，不会真正引入包。一般在父pom中进行声明，在子pom中真正引入
     dependencyManagement标签是管理包所规定的一个标签，多用于父子项目。该标签先定义，但是懒加载。
     在子项目当中要声明使用的时候，才加载jar包。子项目中可以不用声明版本号使用，在父项目的dependencyManagement中定义版本号，
     子项目当中引用GA坐标。dependencies直接可以被子项目继承父项目的jar包。因此要注意他俩区别。
     -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- springCloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>2022.0.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring-boot 模块-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--web 模块-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!--hutool 工具类-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>true</optional>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 编译构建相关配置 -->
    <build>
        <!--        &lt;!&ndash;    项目的名称   &ndash;&gt;-->
        <!--        <finalName>${project.name}</finalName>-->
        <!--        <resources>-->
        <!--            <resource>-->
        <!--                <directory>src/main/resources</directory>-->
        <!--                <filtering>true</filtering>-->
        <!--            </resource>-->
        <!--        </resources>-->
        <!-- 插件申明，一般在父pom中声明，在子pom中真正引入 -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <!-- 插件引入，在父pom中引入以后，所有子pom中都会引入 -->
        <plugins>
            <!-- 编译插件：负责编译项目的源代码-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <target>${maven.compiler.target}</target>
                    <source>${maven.compiler.source}</source>
                    <encoding>UTF-8</encoding>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>
